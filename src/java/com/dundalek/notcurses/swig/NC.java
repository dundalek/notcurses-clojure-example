/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dundalek.notcurses.swig;

public class NC implements NCConstants {
  public static String notcurses_version() {
    return NCJNI.notcurses_version();
  }

  public static void notcurses_version_components(SWIGTYPE_p_int major, SWIGTYPE_p_int minor, SWIGTYPE_p_int patch, SWIGTYPE_p_int tweak) {
    NCJNI.notcurses_version_components(SWIGTYPE_p_int.getCPtr(major), SWIGTYPE_p_int.getCPtr(minor), SWIGTYPE_p_int.getCPtr(patch), SWIGTYPE_p_int.getCPtr(tweak));
  }

  public static long ncchannel_alpha(long channel) {
    return NCJNI.ncchannel_alpha(channel);
  }

  public static int ncchannel_set_alpha(SWIGTYPE_p_unsigned_int channel, long alpha) {
    return NCJNI.ncchannel_set_alpha(SWIGTYPE_p_unsigned_int.getCPtr(channel), alpha);
  }

  public static boolean ncchannel_default_p(long channel) {
    return NCJNI.ncchannel_default_p(channel);
  }

  public static long ncchannel_set_default(SWIGTYPE_p_unsigned_int channel) {
    return NCJNI.ncchannel_set_default(SWIGTYPE_p_unsigned_int.getCPtr(channel));
  }

  public static boolean ncchannel_palindex_p(long channel) {
    return NCJNI.ncchannel_palindex_p(channel);
  }

  public static long ncchannel_palindex(long channel) {
    return NCJNI.ncchannel_palindex(channel);
  }

  public static int ncchannel_set_palindex(SWIGTYPE_p_unsigned_int channel, long idx) {
    return NCJNI.ncchannel_set_palindex(SWIGTYPE_p_unsigned_int.getCPtr(channel), idx);
  }

  public static boolean ncchannel_rgb_p(long channel) {
    return NCJNI.ncchannel_rgb_p(channel);
  }

  public static long ncchannel_r(long channel) {
    return NCJNI.ncchannel_r(channel);
  }

  public static long ncchannel_g(long channel) {
    return NCJNI.ncchannel_g(channel);
  }

  public static long ncchannel_b(long channel) {
    return NCJNI.ncchannel_b(channel);
  }

  public static long ncchannel_rgb(long channel) {
    return NCJNI.ncchannel_rgb(channel);
  }

  public static long ncchannel_rgb8(long channel, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncchannel_rgb8(channel, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static int ncchannel_set_rgb8(SWIGTYPE_p_unsigned_int channel, long r, long g, long b) {
    return NCJNI.ncchannel_set_rgb8(SWIGTYPE_p_unsigned_int.getCPtr(channel), r, g, b);
  }

  public static int ncchannel_set(SWIGTYPE_p_unsigned_int channel, long rgb) {
    return NCJNI.ncchannel_set(SWIGTYPE_p_unsigned_int.getCPtr(channel), rgb);
  }

  public static void ncchannel_set_rgb8_clipped(SWIGTYPE_p_unsigned_int channel, int r, int g, int b) {
    NCJNI.ncchannel_set_rgb8_clipped(SWIGTYPE_p_unsigned_int.getCPtr(channel), r, g, b);
  }

  public static long ncchannels_bchannel(long channels) {
    return NCJNI.ncchannels_bchannel(channels);
  }

  public static long ncchannels_fchannel(long channels) {
    return NCJNI.ncchannels_fchannel(channels);
  }

  public static long ncchannels_channels(long channels) {
    return NCJNI.ncchannels_channels(channels);
  }

  public static boolean ncchannels_bg_rgb_p(long channels) {
    return NCJNI.ncchannels_bg_rgb_p(channels);
  }

  public static boolean ncchannels_fg_rgb_p(long channels) {
    return NCJNI.ncchannels_fg_rgb_p(channels);
  }

  public static long ncchannels_bg_alpha(long channels) {
    return NCJNI.ncchannels_bg_alpha(channels);
  }

  public static long ncchannels_set_bchannel(SWIGTYPE_p_unsigned_long channels, long channel) {
    return NCJNI.ncchannels_set_bchannel(SWIGTYPE_p_unsigned_long.getCPtr(channels), channel);
  }

  public static long ncchannels_set_fchannel(SWIGTYPE_p_unsigned_long channels, long channel) {
    return NCJNI.ncchannels_set_fchannel(SWIGTYPE_p_unsigned_long.getCPtr(channels), channel);
  }

  public static long ncchannels_set_channels(SWIGTYPE_p_unsigned_long dst, long channels) {
    return NCJNI.ncchannels_set_channels(SWIGTYPE_p_unsigned_long.getCPtr(dst), channels);
  }

  public static int ncchannels_set_bg_alpha(SWIGTYPE_p_unsigned_long channels, long alpha) {
    return NCJNI.ncchannels_set_bg_alpha(SWIGTYPE_p_unsigned_long.getCPtr(channels), alpha);
  }

  public static long ncchannels_fg_alpha(long channels) {
    return NCJNI.ncchannels_fg_alpha(channels);
  }

  public static int ncchannels_set_fg_alpha(SWIGTYPE_p_unsigned_long channels, long alpha) {
    return NCJNI.ncchannels_set_fg_alpha(SWIGTYPE_p_unsigned_long.getCPtr(channels), alpha);
  }

  public static long ncchannels_reverse(long channels) {
    return NCJNI.ncchannels_reverse(channels);
  }

  public static long ncchannels_combine(long fchan, long bchan) {
    return NCJNI.ncchannels_combine(fchan, bchan);
  }

  public static long ncchannels_fg_palindex(long channels) {
    return NCJNI.ncchannels_fg_palindex(channels);
  }

  public static long ncchannels_bg_palindex(long channels) {
    return NCJNI.ncchannels_bg_palindex(channels);
  }

  public static long ncchannels_fg_rgb(long channels) {
    return NCJNI.ncchannels_fg_rgb(channels);
  }

  public static long ncchannels_bg_rgb(long channels) {
    return NCJNI.ncchannels_bg_rgb(channels);
  }

  public static long ncchannels_fg_rgb8(long channels, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncchannels_fg_rgb8(channels, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static long ncchannels_bg_rgb8(long channels, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncchannels_bg_rgb8(channels, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static int ncchannels_set_fg_rgb8(SWIGTYPE_p_unsigned_long channels, long r, long g, long b) {
    return NCJNI.ncchannels_set_fg_rgb8(SWIGTYPE_p_unsigned_long.getCPtr(channels), r, g, b);
  }

  public static void ncchannels_set_fg_rgb8_clipped(SWIGTYPE_p_unsigned_long channels, int r, int g, int b) {
    NCJNI.ncchannels_set_fg_rgb8_clipped(SWIGTYPE_p_unsigned_long.getCPtr(channels), r, g, b);
  }

  public static int ncchannels_set_fg_palindex(SWIGTYPE_p_unsigned_long channels, long idx) {
    return NCJNI.ncchannels_set_fg_palindex(SWIGTYPE_p_unsigned_long.getCPtr(channels), idx);
  }

  public static int ncchannels_set_fg_rgb(SWIGTYPE_p_unsigned_long channels, long rgb) {
    return NCJNI.ncchannels_set_fg_rgb(SWIGTYPE_p_unsigned_long.getCPtr(channels), rgb);
  }

  public static int ncchannels_set_bg_rgb8(SWIGTYPE_p_unsigned_long channels, long r, long g, long b) {
    return NCJNI.ncchannels_set_bg_rgb8(SWIGTYPE_p_unsigned_long.getCPtr(channels), r, g, b);
  }

  public static void ncchannels_set_bg_rgb8_clipped(SWIGTYPE_p_unsigned_long channels, int r, int g, int b) {
    NCJNI.ncchannels_set_bg_rgb8_clipped(SWIGTYPE_p_unsigned_long.getCPtr(channels), r, g, b);
  }

  public static int ncchannels_set_bg_palindex(SWIGTYPE_p_unsigned_long channels, long idx) {
    return NCJNI.ncchannels_set_bg_palindex(SWIGTYPE_p_unsigned_long.getCPtr(channels), idx);
  }

  public static int ncchannels_set_bg_rgb(SWIGTYPE_p_unsigned_long channels, long rgb) {
    return NCJNI.ncchannels_set_bg_rgb(SWIGTYPE_p_unsigned_long.getCPtr(channels), rgb);
  }

  public static boolean ncchannels_fg_default_p(long channels) {
    return NCJNI.ncchannels_fg_default_p(channels);
  }

  public static boolean ncchannels_fg_palindex_p(long channels) {
    return NCJNI.ncchannels_fg_palindex_p(channels);
  }

  public static boolean ncchannels_bg_default_p(long channels) {
    return NCJNI.ncchannels_bg_default_p(channels);
  }

  public static boolean ncchannels_bg_palindex_p(long channels) {
    return NCJNI.ncchannels_bg_palindex_p(channels);
  }

  public static long ncchannels_set_fg_default(SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.ncchannels_set_fg_default(SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static long ncchannels_set_bg_default(SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.ncchannels_set_bg_default(SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static int ncstrwidth(String egcs, SWIGTYPE_p_int validbytes, SWIGTYPE_p_int validwidth) {
    return NCJNI.ncstrwidth(egcs, SWIGTYPE_p_int.getCPtr(validbytes), SWIGTYPE_p_int.getCPtr(validwidth));
  }

  public static int notcurses_ucs32_to_utf8(SWIGTYPE_p_unsigned_int ucs32, long ucs32count, SWIGTYPE_p_unsigned_char resultbuf, long buflen) {
    return NCJNI.notcurses_ucs32_to_utf8(SWIGTYPE_p_unsigned_int.getCPtr(ucs32), ucs32count, SWIGTYPE_p_unsigned_char.getCPtr(resultbuf), buflen);
  }

  public static void nccell_init(nccell c) {
    NCJNI.nccell_init(nccell.getCPtr(c), c);
  }

  public static int nccell_load(SWIGTYPE_p_ncplane n, nccell c, String gcluster) {
    return NCJNI.nccell_load(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, gcluster);
  }

  public static int nccell_prime(SWIGTYPE_p_ncplane n, nccell c, String gcluster, int stylemask, long channels) {
    return NCJNI.nccell_prime(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, gcluster, stylemask, channels);
  }

  public static int nccell_duplicate(SWIGTYPE_p_ncplane n, nccell targ, nccell c) {
    return NCJNI.nccell_duplicate(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(targ), targ, nccell.getCPtr(c), c);
  }

  public static void nccell_release(SWIGTYPE_p_ncplane n, nccell c) {
    NCJNI.nccell_release(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static void nccell_set_styles(nccell c, long stylebits) {
    NCJNI.nccell_set_styles(nccell.getCPtr(c), c, stylebits);
  }

  public static int nccell_styles(nccell c) {
    return NCJNI.nccell_styles(nccell.getCPtr(c), c);
  }

  public static void nccell_on_styles(nccell c, long stylebits) {
    NCJNI.nccell_on_styles(nccell.getCPtr(c), c, stylebits);
  }

  public static void nccell_off_styles(nccell c, long stylebits) {
    NCJNI.nccell_off_styles(nccell.getCPtr(c), c, stylebits);
  }

  public static void nccell_set_fg_default(nccell c) {
    NCJNI.nccell_set_fg_default(nccell.getCPtr(c), c);
  }

  public static void nccell_set_bg_default(nccell c) {
    NCJNI.nccell_set_bg_default(nccell.getCPtr(c), c);
  }

  public static int nccell_set_fg_alpha(nccell c, long alpha) {
    return NCJNI.nccell_set_fg_alpha(nccell.getCPtr(c), c, alpha);
  }

  public static int nccell_set_bg_alpha(nccell c, long alpha) {
    return NCJNI.nccell_set_bg_alpha(nccell.getCPtr(c), c, alpha);
  }

  public static long nccell_set_bchannel(nccell c, long channel) {
    return NCJNI.nccell_set_bchannel(nccell.getCPtr(c), c, channel);
  }

  public static long nccell_set_fchannel(nccell c, long channel) {
    return NCJNI.nccell_set_fchannel(nccell.getCPtr(c), c, channel);
  }

  public static long nccell_set_channels(nccell c, long channels) {
    return NCJNI.nccell_set_channels(nccell.getCPtr(c), c, channels);
  }

  public static boolean nccell_double_wide_p(nccell c) {
    return NCJNI.nccell_double_wide_p(nccell.getCPtr(c), c);
  }

  public static boolean nccell_wide_right_p(nccell c) {
    return NCJNI.nccell_wide_right_p(nccell.getCPtr(c), c);
  }

  public static boolean nccell_wide_left_p(nccell c) {
    return NCJNI.nccell_wide_left_p(nccell.getCPtr(c), c);
  }

  public static String nccell_extended_gcluster(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.nccell_extended_gcluster(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static long nccell_channels(nccell c) {
    return NCJNI.nccell_channels(nccell.getCPtr(c), c);
  }

  public static long nccell_bchannel(nccell cl) {
    return NCJNI.nccell_bchannel(nccell.getCPtr(cl), cl);
  }

  public static long nccell_fchannel(nccell cl) {
    return NCJNI.nccell_fchannel(nccell.getCPtr(cl), cl);
  }

  public static long nccell_cols(nccell c) {
    return NCJNI.nccell_cols(nccell.getCPtr(c), c);
  }

  public static String nccell_strdup(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.nccell_strdup(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static String nccell_extract(SWIGTYPE_p_ncplane n, nccell c, SWIGTYPE_p_unsigned_short stylemask, SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.nccell_extract(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, SWIGTYPE_p_unsigned_short.getCPtr(stylemask), SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static boolean nccellcmp(SWIGTYPE_p_ncplane n1, nccell c1, SWIGTYPE_p_ncplane n2, nccell c2) {
    return NCJNI.nccellcmp(SWIGTYPE_p_ncplane.getCPtr(n1), nccell.getCPtr(c1), c1, SWIGTYPE_p_ncplane.getCPtr(n2), nccell.getCPtr(c2), c2);
  }

  public static int nccell_load_char(SWIGTYPE_p_ncplane n, nccell c, char ch) {
    return NCJNI.nccell_load_char(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, ch);
  }

  public static int nccell_load_egc32(SWIGTYPE_p_ncplane n, nccell c, long egc) {
    return NCJNI.nccell_load_egc32(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, egc);
  }

  public static int nccell_load_ucs32(SWIGTYPE_p_ncplane n, nccell c, long u) {
    return NCJNI.nccell_load_ucs32(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, u);
  }

  public static int notcurses_lex_margins(String op, notcurses_options opts) {
    return NCJNI.notcurses_lex_margins(op, notcurses_options.getCPtr(opts), opts);
  }

  public static int notcurses_lex_blitter(String op, SWIGTYPE_p_ncblitter_e blitter) {
    return NCJNI.notcurses_lex_blitter(op, SWIGTYPE_p_ncblitter_e.getCPtr(blitter));
  }

  public static String notcurses_str_blitter(ncblitter_e blitter) {
    return NCJNI.notcurses_str_blitter(blitter.swigValue());
  }

  public static int notcurses_lex_scalemode(String op, SWIGTYPE_p_ncscale_e scalemode) {
    return NCJNI.notcurses_lex_scalemode(op, SWIGTYPE_p_ncscale_e.getCPtr(scalemode));
  }

  public static String notcurses_str_scalemode(ncscale_e scalemode) {
    return NCJNI.notcurses_str_scalemode(scalemode.swigValue());
  }

  public static SWIGTYPE_p_notcurses notcurses_init(notcurses_options opts, SWIGTYPE_p_FILE fp) {
    long cPtr = NCJNI.notcurses_init(notcurses_options.getCPtr(opts), opts, SWIGTYPE_p_FILE.getCPtr(fp));
    return (cPtr == 0) ? null : new SWIGTYPE_p_notcurses(cPtr, false);
  }

  public static SWIGTYPE_p_notcurses notcurses_core_init(notcurses_options opts, SWIGTYPE_p_FILE fp) {
    long cPtr = NCJNI.notcurses_core_init(notcurses_options.getCPtr(opts), opts, SWIGTYPE_p_FILE.getCPtr(fp));
    return (cPtr == 0) ? null : new SWIGTYPE_p_notcurses(cPtr, false);
  }

  public static int notcurses_stop(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_stop(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static int notcurses_enter_alternate_screen(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_enter_alternate_screen(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static int notcurses_leave_alternate_screen(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_leave_alternate_screen(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static SWIGTYPE_p_ncplane notcurses_stdplane(SWIGTYPE_p_notcurses nc) {
    long cPtr = NCJNI.notcurses_stdplane(SWIGTYPE_p_notcurses.getCPtr(nc));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane notcurses_stdplane_const(SWIGTYPE_p_notcurses nc) {
    long cPtr = NCJNI.notcurses_stdplane_const(SWIGTYPE_p_notcurses.getCPtr(nc));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncpile_top(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncpile_top(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncpile_bottom(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncpile_bottom(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane notcurses_top(SWIGTYPE_p_notcurses n) {
    long cPtr = NCJNI.notcurses_top(SWIGTYPE_p_notcurses.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane notcurses_bottom(SWIGTYPE_p_notcurses n) {
    long cPtr = NCJNI.notcurses_bottom(SWIGTYPE_p_notcurses.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncpile_render(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncpile_render(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncpile_rasterize(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncpile_rasterize(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int notcurses_render(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_render(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static int ncpile_render_to_buffer(SWIGTYPE_p_ncplane p, SWIGTYPE_p_p_char buf, SWIGTYPE_p_size_t buflen) {
    return NCJNI.ncpile_render_to_buffer(SWIGTYPE_p_ncplane.getCPtr(p), SWIGTYPE_p_p_char.getCPtr(buf), SWIGTYPE_p_size_t.getCPtr(buflen));
  }

  public static int ncpile_render_to_file(SWIGTYPE_p_ncplane p, SWIGTYPE_p_FILE fp) {
    return NCJNI.ncpile_render_to_file(SWIGTYPE_p_ncplane.getCPtr(p), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static void notcurses_drop_planes(SWIGTYPE_p_notcurses nc) {
    NCJNI.notcurses_drop_planes(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean nckey_mouse_p(long r) {
    return NCJNI.nckey_mouse_p(r);
  }

  public static boolean ncinput_shift_p(ncinput n) {
    return NCJNI.ncinput_shift_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_ctrl_p(ncinput n) {
    return NCJNI.ncinput_ctrl_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_alt_p(ncinput n) {
    return NCJNI.ncinput_alt_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_meta_p(ncinput n) {
    return NCJNI.ncinput_meta_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_super_p(ncinput n) {
    return NCJNI.ncinput_super_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_hyper_p(ncinput n) {
    return NCJNI.ncinput_hyper_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_capslock_p(ncinput n) {
    return NCJNI.ncinput_capslock_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_numlock_p(ncinput n) {
    return NCJNI.ncinput_numlock_p(ncinput.getCPtr(n), n);
  }

  public static boolean ncinput_equal_p(ncinput n1, ncinput n2) {
    return NCJNI.ncinput_equal_p(ncinput.getCPtr(n1), n1, ncinput.getCPtr(n2), n2);
  }

  public static long notcurses_get(SWIGTYPE_p_notcurses n, SWIGTYPE_p_timespec ts, ncinput ni) {
    return NCJNI.notcurses_get(SWIGTYPE_p_notcurses.getCPtr(n), SWIGTYPE_p_timespec.getCPtr(ts), ncinput.getCPtr(ni), ni);
  }

  public static int notcurses_getvec(SWIGTYPE_p_notcurses n, SWIGTYPE_p_timespec ts, ncinput ni, int vcount) {
    return NCJNI.notcurses_getvec(SWIGTYPE_p_notcurses.getCPtr(n), SWIGTYPE_p_timespec.getCPtr(ts), ncinput.getCPtr(ni), ni, vcount);
  }

  public static int notcurses_inputready_fd(SWIGTYPE_p_notcurses n) {
    return NCJNI.notcurses_inputready_fd(SWIGTYPE_p_notcurses.getCPtr(n));
  }

  public static long notcurses_get_nblock(SWIGTYPE_p_notcurses n, ncinput ni) {
    return NCJNI.notcurses_get_nblock(SWIGTYPE_p_notcurses.getCPtr(n), ncinput.getCPtr(ni), ni);
  }

  public static long notcurses_get_blocking(SWIGTYPE_p_notcurses n, ncinput ni) {
    return NCJNI.notcurses_get_blocking(SWIGTYPE_p_notcurses.getCPtr(n), ncinput.getCPtr(ni), ni);
  }

  public static boolean ncinput_nomod_p(ncinput ni) {
    return NCJNI.ncinput_nomod_p(ncinput.getCPtr(ni), ni);
  }

  public static int notcurses_mice_enable(SWIGTYPE_p_notcurses n, long eventmask) {
    return NCJNI.notcurses_mice_enable(SWIGTYPE_p_notcurses.getCPtr(n), eventmask);
  }

  public static int notcurses_mice_disable(SWIGTYPE_p_notcurses n) {
    return NCJNI.notcurses_mice_disable(SWIGTYPE_p_notcurses.getCPtr(n));
  }

  public static int notcurses_linesigs_disable(SWIGTYPE_p_notcurses n) {
    return NCJNI.notcurses_linesigs_disable(SWIGTYPE_p_notcurses.getCPtr(n));
  }

  public static int notcurses_linesigs_enable(SWIGTYPE_p_notcurses n) {
    return NCJNI.notcurses_linesigs_enable(SWIGTYPE_p_notcurses.getCPtr(n));
  }

  public static int notcurses_refresh(SWIGTYPE_p_notcurses n, SWIGTYPE_p_unsigned_int y, SWIGTYPE_p_unsigned_int x) {
    return NCJNI.notcurses_refresh(SWIGTYPE_p_notcurses.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(y), SWIGTYPE_p_unsigned_int.getCPtr(x));
  }

  public static SWIGTYPE_p_notcurses ncplane_notcurses(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_notcurses(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_notcurses(cPtr, false);
  }

  public static SWIGTYPE_p_notcurses ncplane_notcurses_const(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_notcurses_const(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_notcurses(cPtr, false);
  }

  public static void ncplane_dim_yx(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int y, SWIGTYPE_p_unsigned_int x) {
    NCJNI.ncplane_dim_yx(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(y), SWIGTYPE_p_unsigned_int.getCPtr(x));
  }

  public static SWIGTYPE_p_ncplane notcurses_stddim_yx(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_unsigned_int y, SWIGTYPE_p_unsigned_int x) {
    long cPtr = NCJNI.notcurses_stddim_yx(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_unsigned_int.getCPtr(y), SWIGTYPE_p_unsigned_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane notcurses_stddim_yx_const(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_unsigned_int y, SWIGTYPE_p_unsigned_int x) {
    long cPtr = NCJNI.notcurses_stddim_yx_const(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_unsigned_int.getCPtr(y), SWIGTYPE_p_unsigned_int.getCPtr(x));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static long ncplane_dim_y(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_dim_y(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_dim_x(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_dim_x(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_pixel_geom(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int pxy, SWIGTYPE_p_unsigned_int pxx, SWIGTYPE_p_unsigned_int celldimy, SWIGTYPE_p_unsigned_int celldimx, SWIGTYPE_p_unsigned_int maxbmapy, SWIGTYPE_p_unsigned_int maxbmapx) {
    NCJNI.ncplane_pixel_geom(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(pxy), SWIGTYPE_p_unsigned_int.getCPtr(pxx), SWIGTYPE_p_unsigned_int.getCPtr(celldimy), SWIGTYPE_p_unsigned_int.getCPtr(celldimx), SWIGTYPE_p_unsigned_int.getCPtr(maxbmapy), SWIGTYPE_p_unsigned_int.getCPtr(maxbmapx));
  }

  public static void notcurses_term_dim_yx(SWIGTYPE_p_notcurses n, SWIGTYPE_p_unsigned_int rows, SWIGTYPE_p_unsigned_int cols) {
    NCJNI.notcurses_term_dim_yx(SWIGTYPE_p_notcurses.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(rows), SWIGTYPE_p_unsigned_int.getCPtr(cols));
  }

  public static String notcurses_at_yx(SWIGTYPE_p_notcurses nc, long yoff, long xoff, SWIGTYPE_p_unsigned_short stylemask, SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.notcurses_at_yx(SWIGTYPE_p_notcurses.getCPtr(nc), yoff, xoff, SWIGTYPE_p_unsigned_short.getCPtr(stylemask), SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static SWIGTYPE_p_ncplane ncplane_create(SWIGTYPE_p_ncplane n, ncplane_options nopts) {
    long cPtr = NCJNI.ncplane_create(SWIGTYPE_p_ncplane.getCPtr(n), ncplane_options.getCPtr(nopts), nopts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncpile_create(SWIGTYPE_p_notcurses nc, ncplane_options nopts) {
    long cPtr = NCJNI.ncpile_create(SWIGTYPE_p_notcurses.getCPtr(nc), ncplane_options.getCPtr(nopts), nopts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncplane_resize_maximize(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_resize_maximize(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_resize_marginalized(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_resize_marginalized(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_resize_realign(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_resize_realign(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_resize_placewithin(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_resize_placewithin(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_set_resizecb(SWIGTYPE_p_ncplane n, SWIGTYPE_p_f_p_struct_ncplane__int resizecb) {
    NCJNI.ncplane_set_resizecb(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_f_p_struct_ncplane__int.getCPtr(resizecb));
  }

  public static SWIGTYPE_p_f_p_struct_ncplane__int ncplane_resizecb(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_resizecb(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_ncplane__int(cPtr, false);
  }

  public static int ncplane_set_name(SWIGTYPE_p_ncplane n, String name) {
    return NCJNI.ncplane_set_name(SWIGTYPE_p_ncplane.getCPtr(n), name);
  }

  public static String ncplane_name(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_name(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static SWIGTYPE_p_ncplane ncplane_reparent(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane newparent) {
    long cPtr = NCJNI.ncplane_reparent(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(newparent));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncplane_reparent_family(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane newparent) {
    long cPtr = NCJNI.ncplane_reparent_family(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(newparent));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncplane_dup(SWIGTYPE_p_ncplane n, SWIGTYPE_p_void opaque) {
    long cPtr = NCJNI.ncplane_dup(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_void.getCPtr(opaque));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static void ncplane_translate(SWIGTYPE_p_ncplane src, SWIGTYPE_p_ncplane dst, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    NCJNI.ncplane_translate(SWIGTYPE_p_ncplane.getCPtr(src), SWIGTYPE_p_ncplane.getCPtr(dst), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static boolean ncplane_translate_abs(SWIGTYPE_p_ncplane n, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    return NCJNI.ncplane_translate_abs(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static boolean ncplane_set_scrolling(SWIGTYPE_p_ncplane n, long scrollp) {
    return NCJNI.ncplane_set_scrolling(SWIGTYPE_p_ncplane.getCPtr(n), scrollp);
  }

  public static boolean ncplane_scrolling_p(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_scrolling_p(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static boolean ncplane_set_autogrow(SWIGTYPE_p_ncplane n, long growp) {
    return NCJNI.ncplane_set_autogrow(SWIGTYPE_p_ncplane.getCPtr(n), growp);
  }

  public static boolean ncplane_autogrow_p(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_autogrow_p(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static ncpalette ncpalette_new(SWIGTYPE_p_notcurses nc) {
    long cPtr = NCJNI.ncpalette_new(SWIGTYPE_p_notcurses.getCPtr(nc));
    return (cPtr == 0) ? null : new ncpalette(cPtr, false);
  }

  public static int ncpalette_use(SWIGTYPE_p_notcurses nc, ncpalette p) {
    return NCJNI.ncpalette_use(SWIGTYPE_p_notcurses.getCPtr(nc), ncpalette.getCPtr(p), p);
  }

  public static int ncpalette_set_rgb8(ncpalette p, int idx, long r, long g, long b) {
    return NCJNI.ncpalette_set_rgb8(ncpalette.getCPtr(p), p, idx, r, g, b);
  }

  public static int ncpalette_set(ncpalette p, int idx, long rgb) {
    return NCJNI.ncpalette_set(ncpalette.getCPtr(p), p, idx, rgb);
  }

  public static int ncpalette_get(ncpalette p, int idx, SWIGTYPE_p_unsigned_int palent) {
    return NCJNI.ncpalette_get(ncpalette.getCPtr(p), p, idx, SWIGTYPE_p_unsigned_int.getCPtr(palent));
  }

  public static int ncpalette_get_rgb8(ncpalette p, int idx, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncpalette_get_rgb8(ncpalette.getCPtr(p), p, idx, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static void ncpalette_free(ncpalette p) {
    NCJNI.ncpalette_free(ncpalette.getCPtr(p), p);
  }

  public static int notcurses_supported_styles(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_supported_styles(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static long notcurses_palette_size(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_palette_size(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static String notcurses_detected_terminal(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_detected_terminal(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static nccapabilities notcurses_capabilities(SWIGTYPE_p_notcurses n) {
    long cPtr = NCJNI.notcurses_capabilities(SWIGTYPE_p_notcurses.getCPtr(n));
    return (cPtr == 0) ? null : new nccapabilities(cPtr, false);
  }

  public static ncpixelimpl_e notcurses_check_pixel_support(SWIGTYPE_p_notcurses nc) {
    return ncpixelimpl_e.swigToEnum(NCJNI.notcurses_check_pixel_support(SWIGTYPE_p_notcurses.getCPtr(nc)));
  }

  public static boolean nccapability_canchangecolor(nccapabilities caps) {
    return NCJNI.nccapability_canchangecolor(nccapabilities.getCPtr(caps), caps);
  }

  public static boolean notcurses_cantruecolor(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_cantruecolor(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canchangecolor(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canchangecolor(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canfade(SWIGTYPE_p_notcurses n) {
    return NCJNI.notcurses_canfade(SWIGTYPE_p_notcurses.getCPtr(n));
  }

  public static boolean notcurses_canopen_images(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canopen_images(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canopen_videos(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canopen_videos(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canutf8(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canutf8(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canhalfblock(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canhalfblock(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canquadrant(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canquadrant(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_cansextant(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_cansextant(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canbraille(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canbraille(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static boolean notcurses_canpixel(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_canpixel(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static ncstats notcurses_stats_alloc(SWIGTYPE_p_notcurses nc) {
    long cPtr = NCJNI.notcurses_stats_alloc(SWIGTYPE_p_notcurses.getCPtr(nc));
    return (cPtr == 0) ? null : new ncstats(cPtr, false);
  }

  public static void notcurses_stats(SWIGTYPE_p_notcurses nc, ncstats stats) {
    NCJNI.notcurses_stats(SWIGTYPE_p_notcurses.getCPtr(nc), ncstats.getCPtr(stats), stats);
  }

  public static void notcurses_stats_reset(SWIGTYPE_p_notcurses nc, ncstats stats) {
    NCJNI.notcurses_stats_reset(SWIGTYPE_p_notcurses.getCPtr(nc), ncstats.getCPtr(stats), stats);
  }

  public static int ncplane_resize(SWIGTYPE_p_ncplane n, int keepy, int keepx, long keepleny, long keeplenx, int yoff, int xoff, long ylen, long xlen) {
    return NCJNI.ncplane_resize(SWIGTYPE_p_ncplane.getCPtr(n), keepy, keepx, keepleny, keeplenx, yoff, xoff, ylen, xlen);
  }

  public static int ncplane_resize_simple(SWIGTYPE_p_ncplane n, long ylen, long xlen) {
    return NCJNI.ncplane_resize_simple(SWIGTYPE_p_ncplane.getCPtr(n), ylen, xlen);
  }

  public static int ncplane_destroy(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_destroy(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_set_base_cell(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.ncplane_set_base_cell(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static int ncplane_set_base(SWIGTYPE_p_ncplane n, String egc, int stylemask, long channels) {
    return NCJNI.ncplane_set_base(SWIGTYPE_p_ncplane.getCPtr(n), egc, stylemask, channels);
  }

  public static int ncplane_base(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.ncplane_base(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static void ncplane_yx(SWIGTYPE_p_ncplane n, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    NCJNI.ncplane_yx(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static int ncplane_y(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_y(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_x(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_x(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_move_yx(SWIGTYPE_p_ncplane n, int y, int x) {
    return NCJNI.ncplane_move_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x);
  }

  public static int ncplane_move_rel(SWIGTYPE_p_ncplane n, int y, int x) {
    return NCJNI.ncplane_move_rel(SWIGTYPE_p_ncplane.getCPtr(n), y, x);
  }

  public static void ncplane_abs_yx(SWIGTYPE_p_ncplane n, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    NCJNI.ncplane_abs_yx(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static int ncplane_abs_y(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_abs_y(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_abs_x(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_abs_x(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static SWIGTYPE_p_ncplane ncplane_parent(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_parent(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncplane_parent_const(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_parent_const(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncplane_descendant_p(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane ancestor) {
    return NCJNI.ncplane_descendant_p(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(ancestor));
  }

  public static int ncplane_move_above(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane above) {
    return NCJNI.ncplane_move_above(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(above));
  }

  public static int ncplane_move_below(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane below) {
    return NCJNI.ncplane_move_below(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(below));
  }

  public static void ncplane_move_top(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_move_top(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_move_bottom(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_move_bottom(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_move_family_above(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane targ) {
    return NCJNI.ncplane_move_family_above(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(targ));
  }

  public static int ncplane_move_family_below(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane targ) {
    return NCJNI.ncplane_move_family_below(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(targ));
  }

  public static void ncplane_move_family_top(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_move_family_top(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_move_family_bottom(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_move_family_bottom(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static SWIGTYPE_p_ncplane ncplane_below(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_below(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncplane_above(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_above(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncplane_scrollup(SWIGTYPE_p_ncplane n, int r) {
    return NCJNI.ncplane_scrollup(SWIGTYPE_p_ncplane.getCPtr(n), r);
  }

  public static int ncplane_scrollup_child(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncplane child) {
    return NCJNI.ncplane_scrollup_child(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncplane.getCPtr(child));
  }

  public static int ncplane_rotate_cw(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_rotate_cw(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_rotate_ccw(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_rotate_ccw(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static String ncplane_at_cursor(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_short stylemask, SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.ncplane_at_cursor(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_short.getCPtr(stylemask), SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static int ncplane_at_cursor_cell(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.ncplane_at_cursor_cell(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static String ncplane_at_yx(SWIGTYPE_p_ncplane n, int y, int x, SWIGTYPE_p_unsigned_short stylemask, SWIGTYPE_p_unsigned_long channels) {
    return NCJNI.ncplane_at_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, SWIGTYPE_p_unsigned_short.getCPtr(stylemask), SWIGTYPE_p_unsigned_long.getCPtr(channels));
  }

  public static int ncplane_at_yx_cell(SWIGTYPE_p_ncplane n, int y, int x, nccell c) {
    return NCJNI.ncplane_at_yx_cell(SWIGTYPE_p_ncplane.getCPtr(n), y, x, nccell.getCPtr(c), c);
  }

  public static String ncplane_contents(SWIGTYPE_p_ncplane n, int begy, int begx, long leny, long lenx) {
    return NCJNI.ncplane_contents(SWIGTYPE_p_ncplane.getCPtr(n), begy, begx, leny, lenx);
  }

  public static SWIGTYPE_p_void ncplane_set_userptr(SWIGTYPE_p_ncplane n, SWIGTYPE_p_void opaque) {
    long cPtr = NCJNI.ncplane_set_userptr(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_void.getCPtr(opaque));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void ncplane_userptr(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncplane_userptr(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static void ncplane_center_abs(SWIGTYPE_p_ncplane n, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    NCJNI.ncplane_center_abs(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static SWIGTYPE_p_unsigned_int ncplane_as_rgba(SWIGTYPE_p_ncplane n, ncblitter_e blit, int begy, int begx, long leny, long lenx, SWIGTYPE_p_unsigned_int pxdimy, SWIGTYPE_p_unsigned_int pxdimx) {
    long cPtr = NCJNI.ncplane_as_rgba(SWIGTYPE_p_ncplane.getCPtr(n), blit.swigValue(), begy, begx, leny, lenx, SWIGTYPE_p_unsigned_int.getCPtr(pxdimy), SWIGTYPE_p_unsigned_int.getCPtr(pxdimx));
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
  }

  public static int notcurses_align(int availu, ncalign_e align, int u) {
    return NCJNI.notcurses_align(availu, align.swigValue(), u);
  }

  public static int ncplane_halign(SWIGTYPE_p_ncplane n, ncalign_e align, int c) {
    return NCJNI.ncplane_halign(SWIGTYPE_p_ncplane.getCPtr(n), align.swigValue(), c);
  }

  public static int ncplane_valign(SWIGTYPE_p_ncplane n, ncalign_e align, int r) {
    return NCJNI.ncplane_valign(SWIGTYPE_p_ncplane.getCPtr(n), align.swigValue(), r);
  }

  public static int ncplane_cursor_move_yx(SWIGTYPE_p_ncplane n, int y, int x) {
    return NCJNI.ncplane_cursor_move_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x);
  }

  public static int ncplane_cursor_move_rel(SWIGTYPE_p_ncplane n, int y, int x) {
    return NCJNI.ncplane_cursor_move_rel(SWIGTYPE_p_ncplane.getCPtr(n), y, x);
  }

  public static void ncplane_home(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_home(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_cursor_yx(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int y, SWIGTYPE_p_unsigned_int x) {
    NCJNI.ncplane_cursor_yx(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(y), SWIGTYPE_p_unsigned_int.getCPtr(x));
  }

  public static long ncplane_cursor_y(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_cursor_y(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_cursor_x(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_cursor_x(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_channels(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_channels(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_styles(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_styles(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_putc_yx(SWIGTYPE_p_ncplane n, int y, int x, nccell c) {
    return NCJNI.ncplane_putc_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, nccell.getCPtr(c), c);
  }

  public static int ncplane_putc(SWIGTYPE_p_ncplane n, nccell c) {
    return NCJNI.ncplane_putc(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c);
  }

  public static int ncplane_putchar_yx(SWIGTYPE_p_ncplane n, int y, int x, char c) {
    return NCJNI.ncplane_putchar_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, c);
  }

  public static int ncplane_putchar(SWIGTYPE_p_ncplane n, char c) {
    return NCJNI.ncplane_putchar(SWIGTYPE_p_ncplane.getCPtr(n), c);
  }

  public static int ncplane_putchar_stained(SWIGTYPE_p_ncplane n, char c) {
    return NCJNI.ncplane_putchar_stained(SWIGTYPE_p_ncplane.getCPtr(n), c);
  }

  public static int ncplane_putegc_yx(SWIGTYPE_p_ncplane n, int y, int x, String gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putegc_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, gclust, SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static int ncplane_putegc(SWIGTYPE_p_ncplane n, String gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putegc(SWIGTYPE_p_ncplane.getCPtr(n), gclust, SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static int ncplane_putegc_stained(SWIGTYPE_p_ncplane n, String gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putegc_stained(SWIGTYPE_p_ncplane.getCPtr(n), gclust, SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static String ncwcsrtombs(SWIGTYPE_p_wchar_t src) {
    return NCJNI.ncwcsrtombs(SWIGTYPE_p_wchar_t.getCPtr(src));
  }

  public static int ncplane_putwegc(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putwegc(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(gclust), SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static int ncplane_putwegc_yx(SWIGTYPE_p_ncplane n, int y, int x, SWIGTYPE_p_wchar_t gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putwegc_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, SWIGTYPE_p_wchar_t.getCPtr(gclust), SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static int ncplane_putwegc_stained(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t gclust, SWIGTYPE_p_size_t sbytes) {
    return NCJNI.ncplane_putwegc_stained(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(gclust), SWIGTYPE_p_size_t.getCPtr(sbytes));
  }

  public static int ncplane_putstr_yx(SWIGTYPE_p_ncplane n, int y, int x, String gclusters) {
    return NCJNI.ncplane_putstr_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, gclusters);
  }

  public static int ncplane_putstr(SWIGTYPE_p_ncplane n, String gclustarr) {
    return NCJNI.ncplane_putstr(SWIGTYPE_p_ncplane.getCPtr(n), gclustarr);
  }

  public static int ncplane_putstr_aligned(SWIGTYPE_p_ncplane n, int y, ncalign_e align, String s) {
    return NCJNI.ncplane_putstr_aligned(SWIGTYPE_p_ncplane.getCPtr(n), y, align.swigValue(), s);
  }

  public static int ncplane_putstr_stained(SWIGTYPE_p_ncplane n, String gclusters) {
    return NCJNI.ncplane_putstr_stained(SWIGTYPE_p_ncplane.getCPtr(n), gclusters);
  }

  public static int ncplane_putnstr_aligned(SWIGTYPE_p_ncplane n, int y, ncalign_e align, long s, String str) {
    return NCJNI.ncplane_putnstr_aligned(SWIGTYPE_p_ncplane.getCPtr(n), y, align.swigValue(), s, str);
  }

  public static int ncplane_putnstr_yx(SWIGTYPE_p_ncplane n, int y, int x, long s, String gclusters) {
    return NCJNI.ncplane_putnstr_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, s, gclusters);
  }

  public static int ncplane_putnstr(SWIGTYPE_p_ncplane n, long s, String gclustarr) {
    return NCJNI.ncplane_putnstr(SWIGTYPE_p_ncplane.getCPtr(n), s, gclustarr);
  }

  public static int ncplane_putwstr_yx(SWIGTYPE_p_ncplane n, int y, int x, SWIGTYPE_p_wchar_t gclustarr) {
    return NCJNI.ncplane_putwstr_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, SWIGTYPE_p_wchar_t.getCPtr(gclustarr));
  }

  public static int ncplane_putwstr_aligned(SWIGTYPE_p_ncplane n, int y, ncalign_e align, SWIGTYPE_p_wchar_t gclustarr) {
    return NCJNI.ncplane_putwstr_aligned(SWIGTYPE_p_ncplane.getCPtr(n), y, align.swigValue(), SWIGTYPE_p_wchar_t.getCPtr(gclustarr));
  }

  public static int ncplane_putwstr_stained(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t gclustarr) {
    return NCJNI.ncplane_putwstr_stained(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(gclustarr));
  }

  public static int ncplane_putwstr(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t gclustarr) {
    return NCJNI.ncplane_putwstr(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(gclustarr));
  }

  public static int ncplane_pututf32_yx(SWIGTYPE_p_ncplane n, int y, int x, long u) {
    return NCJNI.ncplane_pututf32_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, u);
  }

  public static int ncplane_putwc_yx(SWIGTYPE_p_ncplane n, int y, int x, SWIGTYPE_p_wchar_t w) {
    return NCJNI.ncplane_putwc_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, SWIGTYPE_p_wchar_t.getCPtr(w));
  }

  public static int ncplane_putwc(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t w) {
    return NCJNI.ncplane_putwc(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(w));
  }

  public static int ncplane_putwc_utf32(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t w, SWIGTYPE_p_unsigned_int wchars) {
    return NCJNI.ncplane_putwc_utf32(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(w), SWIGTYPE_p_unsigned_int.getCPtr(wchars));
  }

  public static int ncplane_putwc_stained(SWIGTYPE_p_ncplane n, SWIGTYPE_p_wchar_t w) {
    return NCJNI.ncplane_putwc_stained(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_wchar_t.getCPtr(w));
  }

  public static int ncplane_puttext(SWIGTYPE_p_ncplane n, int y, ncalign_e align, String text, SWIGTYPE_p_size_t bytes) {
    return NCJNI.ncplane_puttext(SWIGTYPE_p_ncplane.getCPtr(n), y, align.swigValue(), text, SWIGTYPE_p_size_t.getCPtr(bytes));
  }

  public static int ncplane_hline_interp(SWIGTYPE_p_ncplane n, nccell c, long len, long c1, long c2) {
    return NCJNI.ncplane_hline_interp(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, len, c1, c2);
  }

  public static int ncplane_hline(SWIGTYPE_p_ncplane n, nccell c, long len) {
    return NCJNI.ncplane_hline(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, len);
  }

  public static int ncplane_vline_interp(SWIGTYPE_p_ncplane n, nccell c, long len, long c1, long c2) {
    return NCJNI.ncplane_vline_interp(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, len, c1, c2);
  }

  public static int ncplane_vline(SWIGTYPE_p_ncplane n, nccell c, long len) {
    return NCJNI.ncplane_vline(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(c), c, len);
  }

  public static int ncplane_box(SWIGTYPE_p_ncplane n, nccell ul, nccell ur, nccell ll, nccell lr, nccell hline, nccell vline, long ystop, long xstop, long ctlword) {
    return NCJNI.ncplane_box(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hline), hline, nccell.getCPtr(vline), vline, ystop, xstop, ctlword);
  }

  public static int ncplane_box_sized(SWIGTYPE_p_ncplane n, nccell ul, nccell ur, nccell ll, nccell lr, nccell hline, nccell vline, long ystop, long xstop, long ctlword) {
    return NCJNI.ncplane_box_sized(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hline), hline, nccell.getCPtr(vline), vline, ystop, xstop, ctlword);
  }

  public static int ncplane_perimeter(SWIGTYPE_p_ncplane n, nccell ul, nccell ur, nccell ll, nccell lr, nccell hline, nccell vline, long ctlword) {
    return NCJNI.ncplane_perimeter(SWIGTYPE_p_ncplane.getCPtr(n), nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hline), hline, nccell.getCPtr(vline), vline, ctlword);
  }

  public static int ncplane_polyfill_yx(SWIGTYPE_p_ncplane n, int y, int x, nccell c) {
    return NCJNI.ncplane_polyfill_yx(SWIGTYPE_p_ncplane.getCPtr(n), y, x, nccell.getCPtr(c), c);
  }

  public static int ncplane_gradient(SWIGTYPE_p_ncplane n, int y, int x, long ylen, long xlen, String egc, int styles, long ul, long ur, long ll, long lr) {
    return NCJNI.ncplane_gradient(SWIGTYPE_p_ncplane.getCPtr(n), y, x, ylen, xlen, egc, styles, ul, ur, ll, lr);
  }

  public static int ncplane_gradient2x1(SWIGTYPE_p_ncplane n, int y, int x, long ylen, long xlen, long ul, long ur, long ll, long lr) {
    return NCJNI.ncplane_gradient2x1(SWIGTYPE_p_ncplane.getCPtr(n), y, x, ylen, xlen, ul, ur, ll, lr);
  }

  public static int ncplane_format(SWIGTYPE_p_ncplane n, int y, int x, long ylen, long xlen, int stylemask) {
    return NCJNI.ncplane_format(SWIGTYPE_p_ncplane.getCPtr(n), y, x, ylen, xlen, stylemask);
  }

  public static int ncplane_stain(SWIGTYPE_p_ncplane n, int y, int x, long ylen, long xlen, long ul, long ur, long ll, long lr) {
    return NCJNI.ncplane_stain(SWIGTYPE_p_ncplane.getCPtr(n), y, x, ylen, xlen, ul, ur, ll, lr);
  }

  public static int ncplane_mergedown_simple(SWIGTYPE_p_ncplane src, SWIGTYPE_p_ncplane dst) {
    return NCJNI.ncplane_mergedown_simple(SWIGTYPE_p_ncplane.getCPtr(src), SWIGTYPE_p_ncplane.getCPtr(dst));
  }

  public static int ncplane_mergedown(SWIGTYPE_p_ncplane src, SWIGTYPE_p_ncplane dst, int begsrcy, int begsrcx, long leny, long lenx, int dsty, int dstx) {
    return NCJNI.ncplane_mergedown(SWIGTYPE_p_ncplane.getCPtr(src), SWIGTYPE_p_ncplane.getCPtr(dst), begsrcy, begsrcx, leny, lenx, dsty, dstx);
  }

  public static void ncplane_erase(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_erase(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_erase_region(SWIGTYPE_p_ncplane n, int ystart, int xstart, int ylen, int xlen) {
    return NCJNI.ncplane_erase_region(SWIGTYPE_p_ncplane.getCPtr(n), ystart, xstart, ylen, xlen);
  }

  public static long nccell_fg_rgb(nccell cl) {
    return NCJNI.nccell_fg_rgb(nccell.getCPtr(cl), cl);
  }

  public static long nccell_bg_rgb(nccell cl) {
    return NCJNI.nccell_bg_rgb(nccell.getCPtr(cl), cl);
  }

  public static long nccell_fg_alpha(nccell cl) {
    return NCJNI.nccell_fg_alpha(nccell.getCPtr(cl), cl);
  }

  public static long nccell_bg_alpha(nccell cl) {
    return NCJNI.nccell_bg_alpha(nccell.getCPtr(cl), cl);
  }

  public static long nccell_fg_rgb8(nccell cl, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.nccell_fg_rgb8(nccell.getCPtr(cl), cl, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static long nccell_bg_rgb8(nccell cl, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.nccell_bg_rgb8(nccell.getCPtr(cl), cl, SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static int nccell_set_fg_rgb8(nccell cl, long r, long g, long b) {
    return NCJNI.nccell_set_fg_rgb8(nccell.getCPtr(cl), cl, r, g, b);
  }

  public static void nccell_set_fg_rgb8_clipped(nccell cl, int r, int g, int b) {
    NCJNI.nccell_set_fg_rgb8_clipped(nccell.getCPtr(cl), cl, r, g, b);
  }

  public static int nccell_set_fg_rgb(nccell c, long channel) {
    return NCJNI.nccell_set_fg_rgb(nccell.getCPtr(c), c, channel);
  }

  public static int nccell_set_fg_palindex(nccell cl, long idx) {
    return NCJNI.nccell_set_fg_palindex(nccell.getCPtr(cl), cl, idx);
  }

  public static long nccell_fg_palindex(nccell cl) {
    return NCJNI.nccell_fg_palindex(nccell.getCPtr(cl), cl);
  }

  public static int nccell_set_bg_rgb8(nccell cl, long r, long g, long b) {
    return NCJNI.nccell_set_bg_rgb8(nccell.getCPtr(cl), cl, r, g, b);
  }

  public static void nccell_set_bg_rgb8_clipped(nccell cl, int r, int g, int b) {
    NCJNI.nccell_set_bg_rgb8_clipped(nccell.getCPtr(cl), cl, r, g, b);
  }

  public static int nccell_set_bg_rgb(nccell c, long channel) {
    return NCJNI.nccell_set_bg_rgb(nccell.getCPtr(c), c, channel);
  }

  public static int nccell_set_bg_palindex(nccell cl, long idx) {
    return NCJNI.nccell_set_bg_palindex(nccell.getCPtr(cl), cl, idx);
  }

  public static long nccell_bg_palindex(nccell cl) {
    return NCJNI.nccell_bg_palindex(nccell.getCPtr(cl), cl);
  }

  public static boolean nccell_fg_default_p(nccell cl) {
    return NCJNI.nccell_fg_default_p(nccell.getCPtr(cl), cl);
  }

  public static boolean nccell_fg_palindex_p(nccell cl) {
    return NCJNI.nccell_fg_palindex_p(nccell.getCPtr(cl), cl);
  }

  public static boolean nccell_bg_default_p(nccell cl) {
    return NCJNI.nccell_bg_default_p(nccell.getCPtr(cl), cl);
  }

  public static boolean nccell_bg_palindex_p(nccell cl) {
    return NCJNI.nccell_bg_palindex_p(nccell.getCPtr(cl), cl);
  }

  public static long ncplane_bchannel(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_bchannel(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_fchannel(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_fchannel(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_set_channels(SWIGTYPE_p_ncplane n, long channels) {
    NCJNI.ncplane_set_channels(SWIGTYPE_p_ncplane.getCPtr(n), channels);
  }

  public static long ncplane_set_bchannel(SWIGTYPE_p_ncplane n, long channel) {
    return NCJNI.ncplane_set_bchannel(SWIGTYPE_p_ncplane.getCPtr(n), channel);
  }

  public static long ncplane_set_fchannel(SWIGTYPE_p_ncplane n, long channel) {
    return NCJNI.ncplane_set_fchannel(SWIGTYPE_p_ncplane.getCPtr(n), channel);
  }

  public static void ncplane_set_styles(SWIGTYPE_p_ncplane n, long stylebits) {
    NCJNI.ncplane_set_styles(SWIGTYPE_p_ncplane.getCPtr(n), stylebits);
  }

  public static void ncplane_on_styles(SWIGTYPE_p_ncplane n, long stylebits) {
    NCJNI.ncplane_on_styles(SWIGTYPE_p_ncplane.getCPtr(n), stylebits);
  }

  public static void ncplane_off_styles(SWIGTYPE_p_ncplane n, long stylebits) {
    NCJNI.ncplane_off_styles(SWIGTYPE_p_ncplane.getCPtr(n), stylebits);
  }

  public static long ncplane_fg_rgb(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_fg_rgb(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_bg_rgb(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_bg_rgb(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_fg_alpha(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_fg_alpha(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static boolean ncplane_fg_default_p(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_fg_default_p(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_bg_alpha(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_bg_alpha(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static boolean ncplane_bg_default_p(SWIGTYPE_p_ncplane n) {
    return NCJNI.ncplane_bg_default_p(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static long ncplane_fg_rgb8(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncplane_fg_rgb8(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static long ncplane_bg_rgb8(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int r, SWIGTYPE_p_unsigned_int g, SWIGTYPE_p_unsigned_int b) {
    return NCJNI.ncplane_bg_rgb8(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(r), SWIGTYPE_p_unsigned_int.getCPtr(g), SWIGTYPE_p_unsigned_int.getCPtr(b));
  }

  public static int ncplane_set_fg_rgb8(SWIGTYPE_p_ncplane n, long r, long g, long b) {
    return NCJNI.ncplane_set_fg_rgb8(SWIGTYPE_p_ncplane.getCPtr(n), r, g, b);
  }

  public static int ncplane_set_bg_rgb8(SWIGTYPE_p_ncplane n, long r, long g, long b) {
    return NCJNI.ncplane_set_bg_rgb8(SWIGTYPE_p_ncplane.getCPtr(n), r, g, b);
  }

  public static void ncplane_set_bg_rgb8_clipped(SWIGTYPE_p_ncplane n, int r, int g, int b) {
    NCJNI.ncplane_set_bg_rgb8_clipped(SWIGTYPE_p_ncplane.getCPtr(n), r, g, b);
  }

  public static void ncplane_set_fg_rgb8_clipped(SWIGTYPE_p_ncplane n, int r, int g, int b) {
    NCJNI.ncplane_set_fg_rgb8_clipped(SWIGTYPE_p_ncplane.getCPtr(n), r, g, b);
  }

  public static int ncplane_set_fg_rgb(SWIGTYPE_p_ncplane n, long channel) {
    return NCJNI.ncplane_set_fg_rgb(SWIGTYPE_p_ncplane.getCPtr(n), channel);
  }

  public static int ncplane_set_bg_rgb(SWIGTYPE_p_ncplane n, long channel) {
    return NCJNI.ncplane_set_bg_rgb(SWIGTYPE_p_ncplane.getCPtr(n), channel);
  }

  public static void ncplane_set_fg_default(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_set_fg_default(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static void ncplane_set_bg_default(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_set_bg_default(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static int ncplane_set_fg_palindex(SWIGTYPE_p_ncplane n, long idx) {
    return NCJNI.ncplane_set_fg_palindex(SWIGTYPE_p_ncplane.getCPtr(n), idx);
  }

  public static int ncplane_set_bg_palindex(SWIGTYPE_p_ncplane n, long idx) {
    return NCJNI.ncplane_set_bg_palindex(SWIGTYPE_p_ncplane.getCPtr(n), idx);
  }

  public static int ncplane_set_fg_alpha(SWIGTYPE_p_ncplane n, int alpha) {
    return NCJNI.ncplane_set_fg_alpha(SWIGTYPE_p_ncplane.getCPtr(n), alpha);
  }

  public static int ncplane_set_bg_alpha(SWIGTYPE_p_ncplane n, int alpha) {
    return NCJNI.ncplane_set_bg_alpha(SWIGTYPE_p_ncplane.getCPtr(n), alpha);
  }

  public static int ncplane_fadeout(SWIGTYPE_p_ncplane n, SWIGTYPE_p_timespec ts, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int fader, SWIGTYPE_p_void curry) {
    return NCJNI.ncplane_fadeout(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_timespec.getCPtr(ts), SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int.getCPtr(fader), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static int ncplane_fadein(SWIGTYPE_p_ncplane n, SWIGTYPE_p_timespec ts, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int fader, SWIGTYPE_p_void curry) {
    return NCJNI.ncplane_fadein(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_timespec.getCPtr(ts), SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int.getCPtr(fader), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static SWIGTYPE_p_ncfadectx ncfadectx_setup(SWIGTYPE_p_ncplane n) {
    long cPtr = NCJNI.ncfadectx_setup(SWIGTYPE_p_ncplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncfadectx(cPtr, false);
  }

  public static int ncfadectx_iterations(SWIGTYPE_p_ncfadectx nctx) {
    return NCJNI.ncfadectx_iterations(SWIGTYPE_p_ncfadectx.getCPtr(nctx));
  }

  public static int ncplane_fadeout_iteration(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncfadectx nctx, int iter, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int fader, SWIGTYPE_p_void curry) {
    return NCJNI.ncplane_fadeout_iteration(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncfadectx.getCPtr(nctx), iter, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int.getCPtr(fader), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static int ncplane_fadein_iteration(SWIGTYPE_p_ncplane n, SWIGTYPE_p_ncfadectx nctx, int iter, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int fader, SWIGTYPE_p_void curry) {
    return NCJNI.ncplane_fadein_iteration(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_ncfadectx.getCPtr(nctx), iter, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int.getCPtr(fader), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static int ncplane_pulse(SWIGTYPE_p_ncplane n, SWIGTYPE_p_timespec ts, SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int fader, SWIGTYPE_p_void curry) {
    return NCJNI.ncplane_pulse(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_timespec.getCPtr(ts), SWIGTYPE_p_f_p_struct_notcurses_p_struct_ncplane_p_q_const__struct_timespec_p_void__int.getCPtr(fader), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static void ncfadectx_free(SWIGTYPE_p_ncfadectx nctx) {
    NCJNI.ncfadectx_free(SWIGTYPE_p_ncfadectx.getCPtr(nctx));
  }

  public static int nccells_load_box(SWIGTYPE_p_ncplane n, int styles, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl, String gclusters) {
    return NCJNI.nccells_load_box(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl, gclusters);
  }

  public static int nccells_ascii_box(SWIGTYPE_p_ncplane n, int attr, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl) {
    return NCJNI.nccells_ascii_box(SWIGTYPE_p_ncplane.getCPtr(n), attr, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl);
  }

  public static int nccells_double_box(SWIGTYPE_p_ncplane n, int attr, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl) {
    return NCJNI.nccells_double_box(SWIGTYPE_p_ncplane.getCPtr(n), attr, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl);
  }

  public static int nccells_rounded_box(SWIGTYPE_p_ncplane n, int attr, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl) {
    return NCJNI.nccells_rounded_box(SWIGTYPE_p_ncplane.getCPtr(n), attr, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl);
  }

  public static int nccells_light_box(SWIGTYPE_p_ncplane n, int attr, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl) {
    return NCJNI.nccells_light_box(SWIGTYPE_p_ncplane.getCPtr(n), attr, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl);
  }

  public static int nccells_heavy_box(SWIGTYPE_p_ncplane n, int attr, long channels, nccell ul, nccell ur, nccell ll, nccell lr, nccell hl, nccell vl) {
    return NCJNI.nccells_heavy_box(SWIGTYPE_p_ncplane.getCPtr(n), attr, channels, nccell.getCPtr(ul), ul, nccell.getCPtr(ur), ur, nccell.getCPtr(ll), ll, nccell.getCPtr(lr), lr, nccell.getCPtr(hl), hl, nccell.getCPtr(vl), vl);
  }

  public static int ncplane_rounded_box(SWIGTYPE_p_ncplane n, int styles, long channels, long ystop, long xstop, long ctlword) {
    return NCJNI.ncplane_rounded_box(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, ystop, xstop, ctlword);
  }

  public static int ncplane_perimeter_rounded(SWIGTYPE_p_ncplane n, int stylemask, long channels, long ctlword) {
    return NCJNI.ncplane_perimeter_rounded(SWIGTYPE_p_ncplane.getCPtr(n), stylemask, channels, ctlword);
  }

  public static int ncplane_rounded_box_sized(SWIGTYPE_p_ncplane n, int styles, long channels, long ylen, long xlen, long ctlword) {
    return NCJNI.ncplane_rounded_box_sized(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, ylen, xlen, ctlword);
  }

  public static int ncplane_double_box(SWIGTYPE_p_ncplane n, int styles, long channels, long ylen, long xlen, long ctlword) {
    return NCJNI.ncplane_double_box(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, ylen, xlen, ctlword);
  }

  public static int ncplane_ascii_box(SWIGTYPE_p_ncplane n, int styles, long channels, long ylen, long xlen, long ctlword) {
    return NCJNI.ncplane_ascii_box(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, ylen, xlen, ctlword);
  }

  public static int ncplane_perimeter_double(SWIGTYPE_p_ncplane n, int stylemask, long channels, long ctlword) {
    return NCJNI.ncplane_perimeter_double(SWIGTYPE_p_ncplane.getCPtr(n), stylemask, channels, ctlword);
  }

  public static int ncplane_double_box_sized(SWIGTYPE_p_ncplane n, int styles, long channels, long ylen, long xlen, long ctlword) {
    return NCJNI.ncplane_double_box_sized(SWIGTYPE_p_ncplane.getCPtr(n), styles, channels, ylen, xlen, ctlword);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_file(String file) {
    long cPtr = NCJNI.ncvisual_from_file(file);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_rgba(SWIGTYPE_p_void rgba, int rows, int rowstride, int cols) {
    long cPtr = NCJNI.ncvisual_from_rgba(SWIGTYPE_p_void.getCPtr(rgba), rows, rowstride, cols);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_rgb_packed(SWIGTYPE_p_void rgba, int rows, int rowstride, int cols, int alpha) {
    long cPtr = NCJNI.ncvisual_from_rgb_packed(SWIGTYPE_p_void.getCPtr(rgba), rows, rowstride, cols, alpha);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_rgb_loose(SWIGTYPE_p_void rgba, int rows, int rowstride, int cols, int alpha) {
    long cPtr = NCJNI.ncvisual_from_rgb_loose(SWIGTYPE_p_void.getCPtr(rgba), rows, rowstride, cols, alpha);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_bgra(SWIGTYPE_p_void bgra, int rows, int rowstride, int cols) {
    long cPtr = NCJNI.ncvisual_from_bgra(SWIGTYPE_p_void.getCPtr(bgra), rows, rowstride, cols);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_palidx(SWIGTYPE_p_void data, int rows, int rowstride, int cols, int palsize, int pstride, SWIGTYPE_p_unsigned_int palette) {
    long cPtr = NCJNI.ncvisual_from_palidx(SWIGTYPE_p_void.getCPtr(data), rows, rowstride, cols, palsize, pstride, SWIGTYPE_p_unsigned_int.getCPtr(palette));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_plane(SWIGTYPE_p_ncplane n, ncblitter_e blit, int begy, int begx, long leny, long lenx) {
    long cPtr = NCJNI.ncvisual_from_plane(SWIGTYPE_p_ncplane.getCPtr(n), blit.swigValue(), begy, begx, leny, lenx);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static SWIGTYPE_p_ncvisual ncvisual_from_sixel(String s, long leny, long lenx) {
    long cPtr = NCJNI.ncvisual_from_sixel(s, leny, lenx);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncvisual(cPtr, false);
  }

  public static int ncvisual_geom(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_ncvisual n, ncvisual_options vopts, ncvgeom geom) {
    return NCJNI.ncvisual_geom(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_ncvisual.getCPtr(n), ncvisual_options.getCPtr(vopts), vopts, ncvgeom.getCPtr(geom), geom);
  }

  public static void ncvisual_destroy(SWIGTYPE_p_ncvisual ncv) {
    NCJNI.ncvisual_destroy(SWIGTYPE_p_ncvisual.getCPtr(ncv));
  }

  public static int ncvisual_decode(SWIGTYPE_p_ncvisual nc) {
    return NCJNI.ncvisual_decode(SWIGTYPE_p_ncvisual.getCPtr(nc));
  }

  public static int ncvisual_decode_loop(SWIGTYPE_p_ncvisual nc) {
    return NCJNI.ncvisual_decode_loop(SWIGTYPE_p_ncvisual.getCPtr(nc));
  }

  public static int ncvisual_rotate(SWIGTYPE_p_ncvisual n, double rads) {
    return NCJNI.ncvisual_rotate(SWIGTYPE_p_ncvisual.getCPtr(n), rads);
  }

  public static int ncvisual_resize(SWIGTYPE_p_ncvisual n, int rows, int cols) {
    return NCJNI.ncvisual_resize(SWIGTYPE_p_ncvisual.getCPtr(n), rows, cols);
  }

  public static int ncvisual_resize_noninterpolative(SWIGTYPE_p_ncvisual n, int rows, int cols) {
    return NCJNI.ncvisual_resize_noninterpolative(SWIGTYPE_p_ncvisual.getCPtr(n), rows, cols);
  }

  public static int ncvisual_polyfill_yx(SWIGTYPE_p_ncvisual n, long y, long x, long rgba) {
    return NCJNI.ncvisual_polyfill_yx(SWIGTYPE_p_ncvisual.getCPtr(n), y, x, rgba);
  }

  public static int ncvisual_at_yx(SWIGTYPE_p_ncvisual n, long y, long x, SWIGTYPE_p_unsigned_int pixel) {
    return NCJNI.ncvisual_at_yx(SWIGTYPE_p_ncvisual.getCPtr(n), y, x, SWIGTYPE_p_unsigned_int.getCPtr(pixel));
  }

  public static int ncvisual_set_yx(SWIGTYPE_p_ncvisual n, long y, long x, long pixel) {
    return NCJNI.ncvisual_set_yx(SWIGTYPE_p_ncvisual.getCPtr(n), y, x, pixel);
  }

  public static SWIGTYPE_p_ncplane ncvisual_blit(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_ncvisual ncv, ncvisual_options vopts) {
    long cPtr = NCJNI.ncvisual_blit(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_ncvisual.getCPtr(ncv), ncvisual_options.getCPtr(vopts), vopts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncvisualplane_create(SWIGTYPE_p_notcurses nc, ncplane_options opts, SWIGTYPE_p_ncvisual ncv, ncvisual_options vopts) {
    long cPtr = NCJNI.ncvisualplane_create(SWIGTYPE_p_notcurses.getCPtr(nc), ncplane_options.getCPtr(opts), opts, SWIGTYPE_p_ncvisual.getCPtr(ncv), ncvisual_options.getCPtr(vopts), vopts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncvisual_subtitle_plane(SWIGTYPE_p_ncplane parent, SWIGTYPE_p_ncvisual ncv) {
    long cPtr = NCJNI.ncvisual_subtitle_plane(SWIGTYPE_p_ncplane.getCPtr(parent), SWIGTYPE_p_ncvisual.getCPtr(ncv));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static ncblitter_e ncvisual_media_defblitter(SWIGTYPE_p_notcurses nc, ncscale_e scale) {
    return ncblitter_e.swigToEnum(NCJNI.ncvisual_media_defblitter(SWIGTYPE_p_notcurses.getCPtr(nc), scale.swigValue()));
  }

  public static int ncvisual_simple_streamer(SWIGTYPE_p_ncvisual ncv, ncvisual_options vopts, SWIGTYPE_p_timespec tspec, SWIGTYPE_p_void curry) {
    return NCJNI.ncvisual_simple_streamer(SWIGTYPE_p_ncvisual.getCPtr(ncv), ncvisual_options.getCPtr(vopts), vopts, SWIGTYPE_p_timespec.getCPtr(tspec), SWIGTYPE_p_void.getCPtr(curry));
  }

  public static int ncvisual_stream(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_ncvisual ncv, float timescale, SWIGTYPE_p_f_p_struct_ncvisual_p_struct_ncvisual_options_p_q_const__struct_timespec_p_void__int streamer, ncvisual_options vopts, SWIGTYPE_p_void curry) {
    return NCJNI.ncvisual_stream(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_ncvisual.getCPtr(ncv), timescale, SWIGTYPE_p_f_p_struct_ncvisual_p_struct_ncvisual_options_p_q_const__struct_timespec_p_void__int.getCPtr(streamer), ncvisual_options.getCPtr(vopts), vopts, SWIGTYPE_p_void.getCPtr(curry));
  }

  public static int ncblit_rgba(SWIGTYPE_p_void data, int linesize, ncvisual_options vopts) {
    return NCJNI.ncblit_rgba(SWIGTYPE_p_void.getCPtr(data), linesize, ncvisual_options.getCPtr(vopts), vopts);
  }

  public static int ncblit_bgrx(SWIGTYPE_p_void data, int linesize, ncvisual_options vopts) {
    return NCJNI.ncblit_bgrx(SWIGTYPE_p_void.getCPtr(data), linesize, ncvisual_options.getCPtr(vopts), vopts);
  }

  public static int ncblit_rgb_packed(SWIGTYPE_p_void data, int linesize, ncvisual_options vopts, int alpha) {
    return NCJNI.ncblit_rgb_packed(SWIGTYPE_p_void.getCPtr(data), linesize, ncvisual_options.getCPtr(vopts), vopts, alpha);
  }

  public static int ncblit_rgb_loose(SWIGTYPE_p_void data, int linesize, ncvisual_options vopts, int alpha) {
    return NCJNI.ncblit_rgb_loose(SWIGTYPE_p_void.getCPtr(data), linesize, ncvisual_options.getCPtr(vopts), vopts, alpha);
  }

  public static long ncpixel_a(long pixel) {
    return NCJNI.ncpixel_a(pixel);
  }

  public static long ncpixel_r(long pixel) {
    return NCJNI.ncpixel_r(pixel);
  }

  public static long ncpixel_g(long pixel) {
    return NCJNI.ncpixel_g(pixel);
  }

  public static long ncpixel_b(long pixel) {
    return NCJNI.ncpixel_b(pixel);
  }

  public static int ncpixel_set_a(SWIGTYPE_p_unsigned_int pixel, long a) {
    return NCJNI.ncpixel_set_a(SWIGTYPE_p_unsigned_int.getCPtr(pixel), a);
  }

  public static int ncpixel_set_r(SWIGTYPE_p_unsigned_int pixel, long r) {
    return NCJNI.ncpixel_set_r(SWIGTYPE_p_unsigned_int.getCPtr(pixel), r);
  }

  public static int ncpixel_set_g(SWIGTYPE_p_unsigned_int pixel, long g) {
    return NCJNI.ncpixel_set_g(SWIGTYPE_p_unsigned_int.getCPtr(pixel), g);
  }

  public static int ncpixel_set_b(SWIGTYPE_p_unsigned_int pixel, long b) {
    return NCJNI.ncpixel_set_b(SWIGTYPE_p_unsigned_int.getCPtr(pixel), b);
  }

  public static long ncpixel(long r, long g, long b) {
    return NCJNI.ncpixel(r, g, b);
  }

  public static int ncpixel_set_rgb8(SWIGTYPE_p_unsigned_int pixel, long r, long g, long b) {
    return NCJNI.ncpixel_set_rgb8(SWIGTYPE_p_unsigned_int.getCPtr(pixel), r, g, b);
  }

  public static SWIGTYPE_p_ncreel ncreel_create(SWIGTYPE_p_ncplane n, ncreel_options popts) {
    long cPtr = NCJNI.ncreel_create(SWIGTYPE_p_ncplane.getCPtr(n), ncreel_options.getCPtr(popts), popts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncreel(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncreel_plane(SWIGTYPE_p_ncreel nr) {
    long cPtr = NCJNI.ncreel_plane(SWIGTYPE_p_ncreel.getCPtr(nr));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_nctablet ncreel_add(SWIGTYPE_p_ncreel nr, SWIGTYPE_p_nctablet after, SWIGTYPE_p_nctablet before, SWIGTYPE_p_f_p_struct_nctablet_bool__int cb, SWIGTYPE_p_void opaque) {
    long cPtr = NCJNI.ncreel_add(SWIGTYPE_p_ncreel.getCPtr(nr), SWIGTYPE_p_nctablet.getCPtr(after), SWIGTYPE_p_nctablet.getCPtr(before), SWIGTYPE_p_f_p_struct_nctablet_bool__int.getCPtr(cb), SWIGTYPE_p_void.getCPtr(opaque));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctablet(cPtr, false);
  }

  public static int ncreel_tabletcount(SWIGTYPE_p_ncreel nr) {
    return NCJNI.ncreel_tabletcount(SWIGTYPE_p_ncreel.getCPtr(nr));
  }

  public static int ncreel_del(SWIGTYPE_p_ncreel nr, SWIGTYPE_p_nctablet t) {
    return NCJNI.ncreel_del(SWIGTYPE_p_ncreel.getCPtr(nr), SWIGTYPE_p_nctablet.getCPtr(t));
  }

  public static int ncreel_redraw(SWIGTYPE_p_ncreel nr) {
    return NCJNI.ncreel_redraw(SWIGTYPE_p_ncreel.getCPtr(nr));
  }

  public static boolean ncreel_offer_input(SWIGTYPE_p_ncreel nr, ncinput ni) {
    return NCJNI.ncreel_offer_input(SWIGTYPE_p_ncreel.getCPtr(nr), ncinput.getCPtr(ni), ni);
  }

  public static SWIGTYPE_p_nctablet ncreel_focused(SWIGTYPE_p_ncreel nr) {
    long cPtr = NCJNI.ncreel_focused(SWIGTYPE_p_ncreel.getCPtr(nr));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctablet(cPtr, false);
  }

  public static SWIGTYPE_p_nctablet ncreel_next(SWIGTYPE_p_ncreel nr) {
    long cPtr = NCJNI.ncreel_next(SWIGTYPE_p_ncreel.getCPtr(nr));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctablet(cPtr, false);
  }

  public static SWIGTYPE_p_nctablet ncreel_prev(SWIGTYPE_p_ncreel nr) {
    long cPtr = NCJNI.ncreel_prev(SWIGTYPE_p_ncreel.getCPtr(nr));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctablet(cPtr, false);
  }

  public static void ncreel_destroy(SWIGTYPE_p_ncreel nr) {
    NCJNI.ncreel_destroy(SWIGTYPE_p_ncreel.getCPtr(nr));
  }

  public static SWIGTYPE_p_void nctablet_userptr(SWIGTYPE_p_nctablet t) {
    long cPtr = NCJNI.nctablet_userptr(SWIGTYPE_p_nctablet.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane nctablet_plane(SWIGTYPE_p_nctablet t) {
    long cPtr = NCJNI.nctablet_plane(SWIGTYPE_p_nctablet.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static String ncnmetric(long val, long s, long decimal, String buf, int omitdec, long mult, int uprefix) {
    return NCJNI.ncnmetric(val, s, decimal, buf, omitdec, mult, uprefix);
  }

  public static String ncqprefix(long val, long decimal, String buf, int omitdec) {
    return NCJNI.ncqprefix(val, decimal, buf, omitdec);
  }

  public static String nciprefix(long val, long decimal, String buf, int omitdec) {
    return NCJNI.nciprefix(val, decimal, buf, omitdec);
  }

  public static String ncbprefix(long val, long decimal, String buf, int omitdec) {
    return NCJNI.ncbprefix(val, decimal, buf, omitdec);
  }

  public static int notcurses_default_foreground(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_unsigned_int fg) {
    return NCJNI.notcurses_default_foreground(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_unsigned_int.getCPtr(fg));
  }

  public static int notcurses_default_background(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_unsigned_int bg) {
    return NCJNI.notcurses_default_background(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_unsigned_int.getCPtr(bg));
  }

  public static int notcurses_cursor_enable(SWIGTYPE_p_notcurses nc, int y, int x) {
    return NCJNI.notcurses_cursor_enable(SWIGTYPE_p_notcurses.getCPtr(nc), y, x);
  }

  public static int notcurses_cursor_disable(SWIGTYPE_p_notcurses nc) {
    return NCJNI.notcurses_cursor_disable(SWIGTYPE_p_notcurses.getCPtr(nc));
  }

  public static int notcurses_cursor_yx(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_int y, SWIGTYPE_p_int x) {
    return NCJNI.notcurses_cursor_yx(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_int.getCPtr(y), SWIGTYPE_p_int.getCPtr(x));
  }

  public static void ncplane_greyscale(SWIGTYPE_p_ncplane n) {
    NCJNI.ncplane_greyscale(SWIGTYPE_p_ncplane.getCPtr(n));
  }

  public static SWIGTYPE_p_ncselector ncselector_create(SWIGTYPE_p_ncplane n, ncselector_options opts) {
    long cPtr = NCJNI.ncselector_create(SWIGTYPE_p_ncplane.getCPtr(n), ncselector_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncselector(cPtr, false);
  }

  public static int ncselector_additem(SWIGTYPE_p_ncselector n, ncselector_item item) {
    return NCJNI.ncselector_additem(SWIGTYPE_p_ncselector.getCPtr(n), ncselector_item.getCPtr(item), item);
  }

  public static int ncselector_delitem(SWIGTYPE_p_ncselector n, String item) {
    return NCJNI.ncselector_delitem(SWIGTYPE_p_ncselector.getCPtr(n), item);
  }

  public static String ncselector_selected(SWIGTYPE_p_ncselector n) {
    return NCJNI.ncselector_selected(SWIGTYPE_p_ncselector.getCPtr(n));
  }

  public static SWIGTYPE_p_ncplane ncselector_plane(SWIGTYPE_p_ncselector n) {
    long cPtr = NCJNI.ncselector_plane(SWIGTYPE_p_ncselector.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static String ncselector_previtem(SWIGTYPE_p_ncselector n) {
    return NCJNI.ncselector_previtem(SWIGTYPE_p_ncselector.getCPtr(n));
  }

  public static String ncselector_nextitem(SWIGTYPE_p_ncselector n) {
    return NCJNI.ncselector_nextitem(SWIGTYPE_p_ncselector.getCPtr(n));
  }

  public static boolean ncselector_offer_input(SWIGTYPE_p_ncselector n, ncinput nc) {
    return NCJNI.ncselector_offer_input(SWIGTYPE_p_ncselector.getCPtr(n), ncinput.getCPtr(nc), nc);
  }

  public static void ncselector_destroy(SWIGTYPE_p_ncselector n, SWIGTYPE_p_p_char item) {
    NCJNI.ncselector_destroy(SWIGTYPE_p_ncselector.getCPtr(n), SWIGTYPE_p_p_char.getCPtr(item));
  }

  public static SWIGTYPE_p_ncmultiselector ncmultiselector_create(SWIGTYPE_p_ncplane n, ncmultiselector_options opts) {
    long cPtr = NCJNI.ncmultiselector_create(SWIGTYPE_p_ncplane.getCPtr(n), ncmultiselector_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncmultiselector(cPtr, false);
  }

  public static int ncmultiselector_selected(SWIGTYPE_p_ncmultiselector n, SWIGTYPE_p_bool selected, long count) {
    return NCJNI.ncmultiselector_selected(SWIGTYPE_p_ncmultiselector.getCPtr(n), SWIGTYPE_p_bool.getCPtr(selected), count);
  }

  public static SWIGTYPE_p_ncplane ncmultiselector_plane(SWIGTYPE_p_ncmultiselector n) {
    long cPtr = NCJNI.ncmultiselector_plane(SWIGTYPE_p_ncmultiselector.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static boolean ncmultiselector_offer_input(SWIGTYPE_p_ncmultiselector n, ncinput nc) {
    return NCJNI.ncmultiselector_offer_input(SWIGTYPE_p_ncmultiselector.getCPtr(n), ncinput.getCPtr(nc), nc);
  }

  public static void ncmultiselector_destroy(SWIGTYPE_p_ncmultiselector n) {
    NCJNI.ncmultiselector_destroy(SWIGTYPE_p_ncmultiselector.getCPtr(n));
  }

  public static SWIGTYPE_p_nctree nctree_create(SWIGTYPE_p_ncplane n, nctree_options opts) {
    long cPtr = NCJNI.nctree_create(SWIGTYPE_p_ncplane.getCPtr(n), nctree_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctree(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane nctree_plane(SWIGTYPE_p_nctree n) {
    long cPtr = NCJNI.nctree_plane(SWIGTYPE_p_nctree.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int nctree_redraw(SWIGTYPE_p_nctree n) {
    return NCJNI.nctree_redraw(SWIGTYPE_p_nctree.getCPtr(n));
  }

  public static boolean nctree_offer_input(SWIGTYPE_p_nctree n, ncinput ni) {
    return NCJNI.nctree_offer_input(SWIGTYPE_p_nctree.getCPtr(n), ncinput.getCPtr(ni), ni);
  }

  public static SWIGTYPE_p_void nctree_focused(SWIGTYPE_p_nctree n) {
    long cPtr = NCJNI.nctree_focused(SWIGTYPE_p_nctree.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void nctree_next(SWIGTYPE_p_nctree n) {
    long cPtr = NCJNI.nctree_next(SWIGTYPE_p_nctree.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void nctree_prev(SWIGTYPE_p_nctree n) {
    long cPtr = NCJNI.nctree_prev(SWIGTYPE_p_nctree.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_void nctree_goto(SWIGTYPE_p_nctree n, SWIGTYPE_p_unsigned_int spec, SWIGTYPE_p_int failspec) {
    long cPtr = NCJNI.nctree_goto(SWIGTYPE_p_nctree.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(spec), SWIGTYPE_p_int.getCPtr(failspec));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int nctree_add(SWIGTYPE_p_nctree n, SWIGTYPE_p_unsigned_int spec, nctree_item add) {
    return NCJNI.nctree_add(SWIGTYPE_p_nctree.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(spec), nctree_item.getCPtr(add), add);
  }

  public static int nctree_del(SWIGTYPE_p_nctree n, SWIGTYPE_p_unsigned_int spec) {
    return NCJNI.nctree_del(SWIGTYPE_p_nctree.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(spec));
  }

  public static void nctree_destroy(SWIGTYPE_p_nctree n) {
    NCJNI.nctree_destroy(SWIGTYPE_p_nctree.getCPtr(n));
  }

  public static SWIGTYPE_p_ncmenu ncmenu_create(SWIGTYPE_p_ncplane n, ncmenu_options opts) {
    long cPtr = NCJNI.ncmenu_create(SWIGTYPE_p_ncplane.getCPtr(n), ncmenu_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncmenu(cPtr, false);
  }

  public static int ncmenu_unroll(SWIGTYPE_p_ncmenu n, int sectionidx) {
    return NCJNI.ncmenu_unroll(SWIGTYPE_p_ncmenu.getCPtr(n), sectionidx);
  }

  public static int ncmenu_rollup(SWIGTYPE_p_ncmenu n) {
    return NCJNI.ncmenu_rollup(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static int ncmenu_nextsection(SWIGTYPE_p_ncmenu n) {
    return NCJNI.ncmenu_nextsection(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static int ncmenu_prevsection(SWIGTYPE_p_ncmenu n) {
    return NCJNI.ncmenu_prevsection(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static int ncmenu_nextitem(SWIGTYPE_p_ncmenu n) {
    return NCJNI.ncmenu_nextitem(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static int ncmenu_previtem(SWIGTYPE_p_ncmenu n) {
    return NCJNI.ncmenu_previtem(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static int ncmenu_item_set_status(SWIGTYPE_p_ncmenu n, String section, String item, boolean enabled) {
    return NCJNI.ncmenu_item_set_status(SWIGTYPE_p_ncmenu.getCPtr(n), section, item, enabled);
  }

  public static String ncmenu_selected(SWIGTYPE_p_ncmenu n, ncinput ni) {
    return NCJNI.ncmenu_selected(SWIGTYPE_p_ncmenu.getCPtr(n), ncinput.getCPtr(ni), ni);
  }

  public static String ncmenu_mouse_selected(SWIGTYPE_p_ncmenu n, ncinput click, ncinput ni) {
    return NCJNI.ncmenu_mouse_selected(SWIGTYPE_p_ncmenu.getCPtr(n), ncinput.getCPtr(click), click, ncinput.getCPtr(ni), ni);
  }

  public static SWIGTYPE_p_ncplane ncmenu_plane(SWIGTYPE_p_ncmenu n) {
    long cPtr = NCJNI.ncmenu_plane(SWIGTYPE_p_ncmenu.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static boolean ncmenu_offer_input(SWIGTYPE_p_ncmenu n, ncinput nc) {
    return NCJNI.ncmenu_offer_input(SWIGTYPE_p_ncmenu.getCPtr(n), ncinput.getCPtr(nc), nc);
  }

  public static void ncmenu_destroy(SWIGTYPE_p_ncmenu n) {
    NCJNI.ncmenu_destroy(SWIGTYPE_p_ncmenu.getCPtr(n));
  }

  public static SWIGTYPE_p_ncprogbar ncprogbar_create(SWIGTYPE_p_ncplane n, ncprogbar_options opts) {
    long cPtr = NCJNI.ncprogbar_create(SWIGTYPE_p_ncplane.getCPtr(n), ncprogbar_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncprogbar(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncprogbar_plane(SWIGTYPE_p_ncprogbar n) {
    long cPtr = NCJNI.ncprogbar_plane(SWIGTYPE_p_ncprogbar.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncprogbar_set_progress(SWIGTYPE_p_ncprogbar n, double p) {
    return NCJNI.ncprogbar_set_progress(SWIGTYPE_p_ncprogbar.getCPtr(n), p);
  }

  public static double ncprogbar_progress(SWIGTYPE_p_ncprogbar n) {
    return NCJNI.ncprogbar_progress(SWIGTYPE_p_ncprogbar.getCPtr(n));
  }

  public static void ncprogbar_destroy(SWIGTYPE_p_ncprogbar n) {
    NCJNI.ncprogbar_destroy(SWIGTYPE_p_ncprogbar.getCPtr(n));
  }

  public static SWIGTYPE_p_nctabbed nctabbed_create(SWIGTYPE_p_ncplane n, nctabbed_options opts) {
    long cPtr = NCJNI.nctabbed_create(SWIGTYPE_p_ncplane.getCPtr(n), nctabbed_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctabbed(cPtr, false);
  }

  public static void nctabbed_destroy(SWIGTYPE_p_nctabbed nt) {
    NCJNI.nctabbed_destroy(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static void nctabbed_redraw(SWIGTYPE_p_nctabbed nt) {
    NCJNI.nctabbed_redraw(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static void nctabbed_ensure_selected_header_visible(SWIGTYPE_p_nctabbed nt) {
    NCJNI.nctabbed_ensure_selected_header_visible(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static SWIGTYPE_p_nctab nctabbed_selected(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_selected(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctabbed_leftmost(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_leftmost(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static int nctabbed_tabcount(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_tabcount(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static SWIGTYPE_p_ncplane nctabbed_plane(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_plane(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane nctabbed_content_plane(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_content_plane(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void nctab_cb(SWIGTYPE_p_nctab t) {
    long cPtr = NCJNI.nctab_cb(SWIGTYPE_p_nctab.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void(cPtr, false);
  }

  public static String nctab_name(SWIGTYPE_p_nctab t) {
    return NCJNI.nctab_name(SWIGTYPE_p_nctab.getCPtr(t));
  }

  public static int nctab_name_width(SWIGTYPE_p_nctab t) {
    return NCJNI.nctab_name_width(SWIGTYPE_p_nctab.getCPtr(t));
  }

  public static SWIGTYPE_p_void nctab_userptr(SWIGTYPE_p_nctab t) {
    long cPtr = NCJNI.nctab_userptr(SWIGTYPE_p_nctab.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctab_next(SWIGTYPE_p_nctab t) {
    long cPtr = NCJNI.nctab_next(SWIGTYPE_p_nctab.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctab_prev(SWIGTYPE_p_nctab t) {
    long cPtr = NCJNI.nctab_prev(SWIGTYPE_p_nctab.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctabbed_add(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab after, SWIGTYPE_p_nctab before, SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void tcb, String name, SWIGTYPE_p_void opaque) {
    long cPtr = NCJNI.nctabbed_add(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(after), SWIGTYPE_p_nctab.getCPtr(before), SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void.getCPtr(tcb), name, SWIGTYPE_p_void.getCPtr(opaque));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static int nctabbed_del(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab t) {
    return NCJNI.nctabbed_del(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(t));
  }

  public static int nctab_move(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab t, SWIGTYPE_p_nctab after, SWIGTYPE_p_nctab before) {
    return NCJNI.nctab_move(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(t), SWIGTYPE_p_nctab.getCPtr(after), SWIGTYPE_p_nctab.getCPtr(before));
  }

  public static void nctab_move_right(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab t) {
    NCJNI.nctab_move_right(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(t));
  }

  public static void nctab_move_left(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab t) {
    NCJNI.nctab_move_left(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(t));
  }

  public static void nctabbed_rotate(SWIGTYPE_p_nctabbed nt, int amt) {
    NCJNI.nctabbed_rotate(SWIGTYPE_p_nctabbed.getCPtr(nt), amt);
  }

  public static SWIGTYPE_p_nctab nctabbed_next(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_next(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctabbed_prev(SWIGTYPE_p_nctabbed nt) {
    long cPtr = NCJNI.nctabbed_prev(SWIGTYPE_p_nctabbed.getCPtr(nt));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static SWIGTYPE_p_nctab nctabbed_select(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_nctab t) {
    long cPtr = NCJNI.nctabbed_select(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_nctab.getCPtr(t));
    return (cPtr == 0) ? null : new SWIGTYPE_p_nctab(cPtr, false);
  }

  public static void nctabbed_channels(SWIGTYPE_p_nctabbed nt, SWIGTYPE_p_unsigned_long hdrchan, SWIGTYPE_p_unsigned_long selchan, SWIGTYPE_p_unsigned_long sepchan) {
    NCJNI.nctabbed_channels(SWIGTYPE_p_nctabbed.getCPtr(nt), SWIGTYPE_p_unsigned_long.getCPtr(hdrchan), SWIGTYPE_p_unsigned_long.getCPtr(selchan), SWIGTYPE_p_unsigned_long.getCPtr(sepchan));
  }

  public static long nctabbed_hdrchan(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_hdrchan(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static long nctabbed_selchan(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_selchan(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static long nctabbed_sepchan(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_sepchan(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static String nctabbed_separator(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_separator(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static int nctabbed_separator_width(SWIGTYPE_p_nctabbed nt) {
    return NCJNI.nctabbed_separator_width(SWIGTYPE_p_nctabbed.getCPtr(nt));
  }

  public static void nctabbed_set_hdrchan(SWIGTYPE_p_nctabbed nt, long chan) {
    NCJNI.nctabbed_set_hdrchan(SWIGTYPE_p_nctabbed.getCPtr(nt), chan);
  }

  public static void nctabbed_set_selchan(SWIGTYPE_p_nctabbed nt, long chan) {
    NCJNI.nctabbed_set_selchan(SWIGTYPE_p_nctabbed.getCPtr(nt), chan);
  }

  public static void nctabbed_set_sepchan(SWIGTYPE_p_nctabbed nt, long chan) {
    NCJNI.nctabbed_set_sepchan(SWIGTYPE_p_nctabbed.getCPtr(nt), chan);
  }

  public static SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void nctab_set_cb(SWIGTYPE_p_nctab t, SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void newcb) {
    long cPtr = NCJNI.nctab_set_cb(SWIGTYPE_p_nctab.getCPtr(t), SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void.getCPtr(newcb));
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_struct_nctab_p_struct_ncplane_p_void__void(cPtr, false);
  }

  public static int nctab_set_name(SWIGTYPE_p_nctab t, String newname) {
    return NCJNI.nctab_set_name(SWIGTYPE_p_nctab.getCPtr(t), newname);
  }

  public static SWIGTYPE_p_void nctab_set_userptr(SWIGTYPE_p_nctab t, SWIGTYPE_p_void newopaque) {
    long cPtr = NCJNI.nctab_set_userptr(SWIGTYPE_p_nctab.getCPtr(t), SWIGTYPE_p_void.getCPtr(newopaque));
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public static int nctabbed_set_separator(SWIGTYPE_p_nctabbed nt, String separator) {
    return NCJNI.nctabbed_set_separator(SWIGTYPE_p_nctabbed.getCPtr(nt), separator);
  }

  public static SWIGTYPE_p_ncuplot ncuplot_create(SWIGTYPE_p_ncplane n, ncplot_options opts, long miny, long maxy) {
    long cPtr = NCJNI.ncuplot_create(SWIGTYPE_p_ncplane.getCPtr(n), ncplot_options.getCPtr(opts), opts, miny, maxy);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncuplot(cPtr, false);
  }

  public static SWIGTYPE_p_ncdplot ncdplot_create(SWIGTYPE_p_ncplane n, ncplot_options opts, double miny, double maxy) {
    long cPtr = NCJNI.ncdplot_create(SWIGTYPE_p_ncplane.getCPtr(n), ncplot_options.getCPtr(opts), opts, miny, maxy);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncdplot(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncuplot_plane(SWIGTYPE_p_ncuplot n) {
    long cPtr = NCJNI.ncuplot_plane(SWIGTYPE_p_ncuplot.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncdplot_plane(SWIGTYPE_p_ncdplot n) {
    long cPtr = NCJNI.ncdplot_plane(SWIGTYPE_p_ncdplot.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncuplot_add_sample(SWIGTYPE_p_ncuplot n, long x, long y) {
    return NCJNI.ncuplot_add_sample(SWIGTYPE_p_ncuplot.getCPtr(n), x, y);
  }

  public static int ncdplot_add_sample(SWIGTYPE_p_ncdplot n, long x, double y) {
    return NCJNI.ncdplot_add_sample(SWIGTYPE_p_ncdplot.getCPtr(n), x, y);
  }

  public static int ncuplot_set_sample(SWIGTYPE_p_ncuplot n, long x, long y) {
    return NCJNI.ncuplot_set_sample(SWIGTYPE_p_ncuplot.getCPtr(n), x, y);
  }

  public static int ncdplot_set_sample(SWIGTYPE_p_ncdplot n, long x, double y) {
    return NCJNI.ncdplot_set_sample(SWIGTYPE_p_ncdplot.getCPtr(n), x, y);
  }

  public static int ncuplot_sample(SWIGTYPE_p_ncuplot n, long x, SWIGTYPE_p_unsigned_long y) {
    return NCJNI.ncuplot_sample(SWIGTYPE_p_ncuplot.getCPtr(n), x, SWIGTYPE_p_unsigned_long.getCPtr(y));
  }

  public static int ncdplot_sample(SWIGTYPE_p_ncdplot n, long x, SWIGTYPE_p_double y) {
    return NCJNI.ncdplot_sample(SWIGTYPE_p_ncdplot.getCPtr(n), x, SWIGTYPE_p_double.getCPtr(y));
  }

  public static void ncuplot_destroy(SWIGTYPE_p_ncuplot n) {
    NCJNI.ncuplot_destroy(SWIGTYPE_p_ncuplot.getCPtr(n));
  }

  public static void ncdplot_destroy(SWIGTYPE_p_ncdplot n) {
    NCJNI.ncdplot_destroy(SWIGTYPE_p_ncdplot.getCPtr(n));
  }

  public static SWIGTYPE_p_ncfdplane ncfdplane_create(SWIGTYPE_p_ncplane n, ncfdplane_options opts, int fd, SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int cbfxn, SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int donecbfxn) {
    long cPtr = NCJNI.ncfdplane_create(SWIGTYPE_p_ncplane.getCPtr(n), ncfdplane_options.getCPtr(opts), opts, fd, SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int.getCPtr(cbfxn), SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int.getCPtr(donecbfxn));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncfdplane(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncfdplane_plane(SWIGTYPE_p_ncfdplane n) {
    long cPtr = NCJNI.ncfdplane_plane(SWIGTYPE_p_ncfdplane.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncfdplane_destroy(SWIGTYPE_p_ncfdplane n) {
    return NCJNI.ncfdplane_destroy(SWIGTYPE_p_ncfdplane.getCPtr(n));
  }

  public static SWIGTYPE_p_ncsubproc ncsubproc_createv(SWIGTYPE_p_ncplane n, ncsubproc_options opts, String bin, SWIGTYPE_p_p_char arg, SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int cbfxn, SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int donecbfxn) {
    long cPtr = NCJNI.ncsubproc_createv(SWIGTYPE_p_ncplane.getCPtr(n), ncsubproc_options.getCPtr(opts), opts, bin, SWIGTYPE_p_p_char.getCPtr(arg), SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int.getCPtr(cbfxn), SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int.getCPtr(donecbfxn));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncsubproc(cPtr, false);
  }

  public static SWIGTYPE_p_ncsubproc ncsubproc_createvp(SWIGTYPE_p_ncplane n, ncsubproc_options opts, String bin, SWIGTYPE_p_p_char arg, SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int cbfxn, SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int donecbfxn) {
    long cPtr = NCJNI.ncsubproc_createvp(SWIGTYPE_p_ncplane.getCPtr(n), ncsubproc_options.getCPtr(opts), opts, bin, SWIGTYPE_p_p_char.getCPtr(arg), SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int.getCPtr(cbfxn), SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int.getCPtr(donecbfxn));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncsubproc(cPtr, false);
  }

  public static SWIGTYPE_p_ncsubproc ncsubproc_createvpe(SWIGTYPE_p_ncplane n, ncsubproc_options opts, String bin, SWIGTYPE_p_p_char arg, SWIGTYPE_p_p_char env, SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int cbfxn, SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int donecbfxn) {
    long cPtr = NCJNI.ncsubproc_createvpe(SWIGTYPE_p_ncplane.getCPtr(n), ncsubproc_options.getCPtr(opts), opts, bin, SWIGTYPE_p_p_char.getCPtr(arg), SWIGTYPE_p_p_char.getCPtr(env), SWIGTYPE_p_f_p_struct_ncfdplane_p_q_const__void_size_t_p_void__int.getCPtr(cbfxn), SWIGTYPE_p_f_p_struct_ncfdplane_int_p_void__int.getCPtr(donecbfxn));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncsubproc(cPtr, false);
  }

  public static SWIGTYPE_p_ncplane ncsubproc_plane(SWIGTYPE_p_ncsubproc n) {
    long cPtr = NCJNI.ncsubproc_plane(SWIGTYPE_p_ncsubproc.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static int ncsubproc_destroy(SWIGTYPE_p_ncsubproc n) {
    return NCJNI.ncsubproc_destroy(SWIGTYPE_p_ncsubproc.getCPtr(n));
  }

  public static int ncplane_qrcode(SWIGTYPE_p_ncplane n, SWIGTYPE_p_unsigned_int ymax, SWIGTYPE_p_unsigned_int xmax, SWIGTYPE_p_void data, long len) {
    return NCJNI.ncplane_qrcode(SWIGTYPE_p_ncplane.getCPtr(n), SWIGTYPE_p_unsigned_int.getCPtr(ymax), SWIGTYPE_p_unsigned_int.getCPtr(xmax), SWIGTYPE_p_void.getCPtr(data), len);
  }

  public static SWIGTYPE_p_ncreader ncreader_create(SWIGTYPE_p_ncplane n, ncreader_options opts) {
    long cPtr = NCJNI.ncreader_create(SWIGTYPE_p_ncplane.getCPtr(n), ncreader_options.getCPtr(opts), opts);
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncreader(cPtr, false);
  }

  public static int ncreader_clear(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_clear(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static SWIGTYPE_p_ncplane ncreader_plane(SWIGTYPE_p_ncreader n) {
    long cPtr = NCJNI.ncreader_plane(SWIGTYPE_p_ncreader.getCPtr(n));
    return (cPtr == 0) ? null : new SWIGTYPE_p_ncplane(cPtr, false);
  }

  public static boolean ncreader_offer_input(SWIGTYPE_p_ncreader n, ncinput ni) {
    return NCJNI.ncreader_offer_input(SWIGTYPE_p_ncreader.getCPtr(n), ncinput.getCPtr(ni), ni);
  }

  public static int ncreader_move_left(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_move_left(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static int ncreader_move_right(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_move_right(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static int ncreader_move_up(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_move_up(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static int ncreader_move_down(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_move_down(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static int ncreader_write_egc(SWIGTYPE_p_ncreader n, String egc) {
    return NCJNI.ncreader_write_egc(SWIGTYPE_p_ncreader.getCPtr(n), egc);
  }

  public static String ncreader_contents(SWIGTYPE_p_ncreader n) {
    return NCJNI.ncreader_contents(SWIGTYPE_p_ncreader.getCPtr(n));
  }

  public static void ncreader_destroy(SWIGTYPE_p_ncreader n, SWIGTYPE_p_p_char contents) {
    NCJNI.ncreader_destroy(SWIGTYPE_p_ncreader.getCPtr(n), SWIGTYPE_p_p_char.getCPtr(contents));
  }

  public static String notcurses_accountname() {
    return NCJNI.notcurses_accountname();
  }

  public static String notcurses_hostname() {
    return NCJNI.notcurses_hostname();
  }

  public static String notcurses_osversion() {
    return NCJNI.notcurses_osversion();
  }

  public static void notcurses_debug(SWIGTYPE_p_notcurses nc, SWIGTYPE_p_FILE debugfp) {
    NCJNI.notcurses_debug(SWIGTYPE_p_notcurses.getCPtr(nc), SWIGTYPE_p_FILE.getCPtr(debugfp));
  }

}
